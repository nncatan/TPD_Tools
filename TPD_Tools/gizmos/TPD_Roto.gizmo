Group {
 name TPD_Roto
 inputs 2
 onCreate "n = nuke.thisNode()\nk = n\['viewer_toolbox']\nk.setFlag(int('0x00000002', 0)) # start viewer group\nk.setFlag(int('0x00000000', 0))# position in left toolbar"
 tile_color 0xb58538ff
 label "\[value lightPass] | v1.2.4\n\[value description]\n\[knob tile_color \[value node_colors]]"
 note_font Verdana
 addUserKnob {20 Roto}
 addUserKnob {1 description}
 addUserKnob {41 lightPass l "light pass" T CONTROL.lightPass}
 addUserKnob {4 node_colors -STARTLINE +INVISIBLE M {3045406975 3043309567 3040557055 3040306687 3040320511 1615377919 1045476863 1031321087 "" "" "" "" "" ""}}
 node_colors {{lightPass x4 0}}
 addUserKnob {26 ""}
 addUserKnob {41 color l value T TPD_ROTO_IN_GRP.color}
 addUserKnob {41 opacity T TPD_ROTO_IN_GRP.opacity}
 addUserKnob {26 ""}
 addUserKnob {6 active_track l "active track       " +STARTLINE}
 addUserKnob {22 bakeTrack l "  Bake Track  " -STARTLINE T "roto = nuke.thisNode()\n\nif roto.input(1).Class() == \"Crop\":\n    crop = roto.input(1)\nelif roto.input(1) == None:\n    nuke.message('must have a track input')\nelse:\n    nuke.message('track input must be a crop node.')\n\nwith roto:\n    ctrl = nuke.toNode('CONTROL')\n    \n    ctrl.knob('bboxX').copyAnimation(0, crop.knob('box').animation(0))\n    ctrl.knob('bboxY').copyAnimation(0, crop.knob('box').animation(1))\n    ctrl.knob('bboxR').copyAnimation(0, crop.knob('box').animation(2))\n    ctrl.knob('bboxT').copyAnimation(0, crop.knob('box').animation(3))\n\nnuke.message('track successfully baked!')"}
 addUserKnob {41 ref_frame l "       ref frame" -STARTLINE T CONTROL.ref_frame}
 addUserKnob {26 ""}
 addUserKnob {22 refreshRoto l <b><i>Refresh</i></b> T TPD_Roto.Reload_TPD_Roto() +STARTLINE}
 addUserKnob {41 key l "        spline key" -STARTLINE T TPD_ROTO_IN_GRP.key}
 addUserKnob {41 curves l "" +STARTLINE T TPD_ROTO_IN_GRP.curves}
 addUserKnob {26 info l " " T "<b><i>TPD_Roto V1.2.4</i></b> by Noah Catan\n<br><br>Last Updated 7.18.2021"}
 addUserKnob {20 viewer_toolbox n 1}
 addUserKnob {41 toolbox l "" +STARTLINE T TPD_ROTO_IN_GRP.toolbox}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 shortcuts l Shortcuts +INVISIBLE}
 addUserKnob {26 text_1 l "" +STARTLINE T "<h2>Roto</h2>\n<br>\n<br><b>Ctrl+Shift</b> - Warp Roto-Shape"}
 addUserKnob {20 Transform +INVISIBLE}
 addUserKnob {41 translate T TPD_ROTO_IN_GRP.translate}
 addUserKnob {41 rotate T TPD_ROTO_IN_GRP.rotate}
 addUserKnob {41 scale T TPD_ROTO_IN_GRP.scale}
}
 Input {
  inputs 0
  name mask
  label "\[value number]"
  xpos -75
  ypos -278
  number 1
 }
set N694a4c00 [stack 0]
 Input {
  inputs 0
  name Input
  label "\[value number]"
  xpos -202
  ypos -325
 }
add_layer {LGHT_KEY_LIGHT LGHT_KEY_LIGHT.alpha}
 Roto {
  inputs 1+1
  output LGHT_KEY_LIGHT
  cliptype bbox
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t 0 0 0
     {"=active_track==True\ ?\ CONTROL.center_x\ :\ width/2"
      {{0 0}}}
     {"=active_track==True\ ?\ CONTROL.center_y\ :\ height/2"
      {{0 0}}}    0 0 0 0
     {"=active_track\ ==True\ ?\ (CONTROL.bboxR-CONTROL.bboxX)\ /\ (CONTROL.bboxR(CONTROL.ref_frame)-CONTROL.bboxX(CONTROL.ref_frame))\ :\ 1"
      {{0 1}}}
     {"=active_track==True\ ?\ (CONTROL.bboxT-CONTROL.bboxY)\ /\ (CONTROL.bboxT(CONTROL.ref_frame)-CONTROL.bboxY(CONTROL.ref_frame))\ :\ 1" 1}}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0 ft x40400000}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 tt 8 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 9 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {1280 545}
  colorOverlay {0 0 0 0}
  lifetime_type "all frames"
  view {}
  motionblur_on true
  motionblur_shutter_offset_type centred
  feather_type smooth
  source_black_outside true
  name TPD_ROTO_IN_GRP
  onCreate "n = nuke.thisNode()\n\nprefs = nuke.toNode('preferences').knob('maxPanels')\nprefs.setValue(prefs.value()+1)\n\nnuke.show(n)\nn.hideControlPanel()\n\nprefs.setValue(prefs.value()-1)"
  xpos -202
  ypos -246
 }
 Clamp {
  channels LGHT_KEY_LIGHT
  name Clamp1
  xpos -202
  ypos -135
 }
 Output {
  name Output1
  xpos -202
  ypos -60
 }
push $N694a4c00
 NoOp {
  name CONTROL
  knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nl = 'LGHT_\{\}'.format(k.value().upper())\n\nif k.name() == \"lightPass\":\n    if l == nuke.toNode('TPD_ROTO_IN_GRP').knob('output').value():\n        pass\n    else:\n        nuke.toNode('TPD_ROTO_IN_GRP').knob('output').setValue(l)\n        nuke.toNode('Clamp1').knob('channels').setValue(l)\n        "
  selected true
  xpos -75
  ypos -215
  addUserKnob {20 User}
  addUserKnob {4 lightPass l "light pass" M {Key_Light AO Secondary Ambient Custom Translucent Specular Rim_Light "" "" ""}}
  addUserKnob {3 ref_frame l "ref frame"}
  ref_frame 1
  addUserKnob {7 center_x l "center x"}
  center_x {{((CONTROL.bboxX+CONTROL.bboxX+CONTROL.bboxR)/3+(CONTROL.bboxX+CONTROL.bboxR+CONTROL.bboxR)/3)/2}}
  addUserKnob {7 center_y l "center y"}
  center_y {{((CONTROL.bboxY+CONTROL.bboxT+CONTROL.bboxT)/3+(CONTROL.bboxY+CONTROL.bboxY+CONTROL.bboxT)/3)/2}}
  addUserKnob {7 bboxX}
  addUserKnob {7 bboxY}
  addUserKnob {7 bboxR}
  addUserKnob {7 bboxT}
 }
end_group
