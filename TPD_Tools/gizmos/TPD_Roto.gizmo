Group {
 name TPD_Roto
 onCreate "n = nuke.thisNode()\nk = n\['viewer_toolbox']\nk.setFlag(int('0x00000002', 0)) # start viewer group\nk.setFlag(int('0x00000000', 0))# position in left toolbar"
 tile_color 0xb58538ff
 label "\[value lightPass] | v1.1.3\n\[value mask1]\n\n\[knob tile_color \[value node_colors]]"
 note_font Verdana
 addUserKnob {20 Roto}
 addUserKnob {41 color l value T TPD_ROTO_IN_GRP.color}
 addUserKnob {41 opacity T TPD_ROTO_IN_GRP.opacity}
 addUserKnob {26 ""}
 addUserKnob {41 lightPass l "light pass" T CONTROL.lightPass}
 addUserKnob {4 node_colors -STARTLINE +INVISIBLE M {3045406975 3043309567 3040557055 3040306687 3040320511 2553787903 1615377919 1045476863 1031321087}}
 node_colors {{lightPass x4 0}}
 addUserKnob {41 mask1 l "mask 1" T MASK1.in}
 addUserKnob {41 mask2 l "mask 2" T MASK2.in}
 addUserKnob {41 mask3 l "mask 3" -STARTLINE T MASK3.in}
 addUserKnob {41 mask4 l "mask 4" -STARTLINE T MASK4.in}
 addUserKnob {26 ""}
 addUserKnob {22 refreshRoto l <b><i>Refresh</i></b> T TPD_Roto.Reload_TPD_Roto() +STARTLINE}
 addUserKnob {41 key l "        spline key" -STARTLINE T TPD_ROTO_IN_GRP.key}
 addUserKnob {41 curves l "" +STARTLINE T TPD_ROTO_IN_GRP.curves}
 addUserKnob {26 info l " " T "<b><i>TPD_Roto V1.1.3</i></b> by Noah Catan\n<br><br>Last Updated 02.28.2021"}
 addUserKnob {20 viewer_toolbox n 1}
 addUserKnob {41 toolbox l "" +STARTLINE T TPD_ROTO_IN_GRP.toolbox}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 shortcuts l Shortcuts -STARTLINE +INVISIBLE}
 addUserKnob {26 text_1 l "" +STARTLINE T "<h2>Roto</h2>\n<br>\n<br><b>Ctrl+Shift</b> - Warp Roto-Shape"}
 addUserKnob {20 Transform +INVISIBLE}
 addUserKnob {41 translate T TPD_ROTO_IN_GRP.translate}
 addUserKnob {41 rotate T TPD_ROTO_IN_GRP.rotate}
 addUserKnob {41 scale T TPD_ROTO_IN_GRP.scale}
}
 Input {
  inputs 0
  name Input1
  label "\[value number]"
  xpos -202
  ypos -338
 }
set Nc43ee800 [stack 0]
 Shuffle {
  in none
  red black
  green black
  blue black
  name MASK4
  label "\[value in]"
  xpos -84
  ypos -264
 }
 Remove {
  operation keep
  channels alpha
  name Remove4
  xpos -84
  ypos -228
 }
push $Nc43ee800
 Shuffle {
  in none
  red black
  green black
  blue black
  name MASK3
  label "\[value in]"
  xpos 8
  ypos -264
 }
 Remove {
  operation keep
  channels alpha
  name Remove3
  xpos 8
  ypos -228
 }
push $Nc43ee800
 Shuffle {
  in none
  red black
  green black
  blue black
  name MASK2
  label "\[value in]"
  xpos 105
  ypos -263
 }
 Remove {
  operation keep
  channels alpha
  name Remove2
  xpos 105
  ypos -227
 }
push $Nc43ee800
 Shuffle {
  in none
  red black
  green black
  blue black
  name MASK1
  label "\[value in]"
  xpos 200
  ypos -264
 }
 Remove {
  operation keep
  channels alpha
  name Remove1
  xpos 200
  ypos -228
 }
 Merge2 {
  inputs 2
  operation disjoint-over
  Achannels alpha
  Bchannels alpha
  output alpha
  name Merge2
  xpos 105
  ypos -171
  disable {{parent.MASK2.in==0||parent.MASK1.in==0}}
 }
 Merge2 {
  inputs 2
  operation disjoint-over
  Achannels alpha
  Bchannels alpha
  output alpha
  name Merge4
  xpos 8
  ypos -171
  disable {{parent.MASK3.in==0||parent.MASK2.disable==1}}
 }
 Merge2 {
  inputs 2
  operation disjoint-over
  Achannels alpha
  Bchannels alpha
  output alpha
  name Merge5
  xpos -84
  ypos -171
  disable {{parent.MASK4.in==0||parent.MASK3.disable==1}}
 }
push $Nc43ee800
 Roto {
  output alpha
  cliptype bbox
  replace true
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44800000 x44428000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0 ft x40400000}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 tt 9 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {1280 545}
  colorOverlay {0 0 0 0}
  lifetime_type "all frames"
  view {}
  motionblur_on true
  motionblur_shutter_offset_type centred
  feather_type smooth
  source_black_outside true
  name TPD_ROTO_IN_GRP
  onCreate "n = nuke.thisNode()\n\nprefs = nuke.toNode('preferences').knob('maxPanels')\nprefs.setValue(prefs.value()+1)\n\nnuke.show(n)\nn.hideControlPanel()\n\nprefs.setValue(prefs.value()-1)"
  xpos -202
  ypos -264
 }
 Merge2 {
  inputs 2
  operation multiply
  bbox B
  Achannels alpha
  Bchannels alpha
  output alpha
  name Merge3
  xpos -202
  ypos -171
  disable {{parent.MASK1.in==0}}
 }
 Clamp {
  channels alpha
  name Clamp1
  xpos -202
  ypos -135
 }
 Dot {
  name Dot6
  xpos -168
  ypos -52
 }
set Nc446ec00 [stack 0]
push $Nc446ec00
add_layer {LGHT_KEY_LIGHT LGHT_KEY_LIGHT.alpha}
 Shuffle {
  in LGHT_KEY_LIGHT
  red black
  green black
  blue black
  name SHUFFLE_PASS
  label "in: \[value in]"
  xpos -82
  ypos -61
 }
 Merge2 {
  inputs 2
  operation disjoint-over
  bbox B
  Achannels alpha
  Bchannels alpha
  output alpha
  name Merge1
  xpos -82
 }
push $Nc446ec00
 ShuffleCopy {
  inputs 2
  alpha alpha2
  black alpha
  out2 LGHT_KEY_LIGHT
  name SHUFFLE_OUTPUT
  label "out2: \[value out2]"
  xpos -202
 }
 Output {
  name Output1
  xpos -202
  ypos 68
 }
 NoOp {
  inputs 0
  name CONTROL
  knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"lightPass\":\n    if 'LGHT_\{\}'.format(k.value().upper()) == nuke.toNode('SHUFFLE_PASS').knob('in').value():\n        pass\n    else:\n        nuke.toNode('SHUFFLE_PASS').knob('in').setValue('LGHT_\{\}'.format(k.value().upper()))\n        nuke.toNode('SHUFFLE_OUTPUT').knob('out2').setValue('LGHT_\{\}'.format(k.value().upper()))"
  xpos -317
  ypos -53
  addUserKnob {20 User}
  addUserKnob {4 lightPass l "light pass" M {Key_Light AO Secondary Ambient Custom Translucent SSS_Skin SSS_Rest Specular Rim_Light}}
 }
end_group
